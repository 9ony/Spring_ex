<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.mapper.BoardMapper">
<insert id="insertBoard" parameterType="Board">
		<selectKey keyProperty="num" resultType="_int" order="BEFORE">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num,name,passwd,subject,content,wdate,readnum,filename,
		originFilename,filesize,refer,lev,sunbun)
		values(#{num},#{name},#{passwd},#{subject},#{content:VARCHAR},sysdate,#{readnum}
		,#{filename:VARCHAR},#{originFilename:VARCHAR},#{filesize:NUMERIC},${num},#{lev},#{sunbun})
		<!-- refer에는 글번호를 넣는다 -->
</insert>

<select id="getTotalCount" resultType="int" parameterType="Paging">
	select count(num) from spring_board
</select>

<select id="selectBoardAllPaging" resultType="Board" parameterType="Paging">
	<!-- select * from spring_board order by refer desc,sunbun asc -->
	 select * from (
	 	select row_number() over(order by refer desc, sunbun asc) rn,
	 	spring_board.* from spring_board
		)
		<![CDATA[
			where rn > #{start} and rn < #{end}
		]]>
		<!-- 부등호 등의 문자가 나올때는 CDATA Section으로 감싸자. CDATA는 Character Data라는
		 의미. CDATA로 감싸진 부분은 xml문서로 파싱하지 않고 문자로 취급한다 -->
		<!-- where rn &gt; #{start} and rn &lt; #{end} --><!-- 부등호를 &로 처리 -->
 		<!-- where rn between #{start} and #{end} --><!-- between처리 -->
</select>

<!-- 게시판 글목록조회 -->
<select id="selectBoardAll" resultType="Board" parameterType="map">
	<!-- select * from spring_board order by refer desc,sunbun asc -->
	 select * from (
	 	select row_number() over(order by refer desc, sunbun asc) rn,
	 	spring_board.* from spring_board
		)
		<![CDATA[
			where rn > #{start} and rn < #{end}
		]]>
		<!-- 부등호 등의 문자가 나올때는 CDATA Section으로 감싸자. CDATA는 Character Data라는
		 의미. CDATA로 감싸진 부분은 xml문서로 파싱하지 않고 문자로 취급한다 -->
		<!-- where rn &gt; #{start} and rn &lt; #{end} --><!-- 부등호를 &로 처리 -->
 		<!-- where rn between #{start} and #{end} --><!-- between처리 -->
</select>
<!-- 작성글 번호로 조회 -->
<select id="selectBoardByIdx" resultType="Board" parameterType="_int">
	select * from spring_board where num=#{value}
</select>
<!-- 조회수 업데이트 -->
<update id="updateReadnum" parameterType="int">
		update spring_board set readnum=readnum+1 where num=#{value}
</update>
<!-- 글삭제 -->
<delete id="deleteBoard" parameterType="int">
	delete spring_board where num=#{value}
</delete>
<!-- 글수정 -->
<update id="updateBoard" parameterType="Board">
	update spring_board set name=#{name}, subject=#{subject}, content=#{content:VARCHAR},
	passwd=#{passwd}
	<if test="filename!=null and filename!=''">
		, filename=#{filename}, filesize=#{filesize}, originFilename=#{originFilename}
	</if>
	<where>
		num=#{num}
	</where>
</update>
<!-- 답변글쓰기 1단계 부모글 refer,lev,sunbun 가져오기 -->
<select id="selectRefLevSunbun" parameterType="int" resultType="Board">
	select refer,lev,sunbun from spring_board where num=#{value}
</select>
<!-- 답변글쓰기 2단계 순번처리 -->
<update id="updateSunbun" parameterType="Board">
	update spring_board set sunbun= sunbun+1
	where refer=#{refer} and sunbun > #{sunbun}
</update>


<!-- 답변글쓰기 3단계 -->
<insert id="rewriteBoard" parameterType="Board">
		<selectKey keyProperty="num" resultType="_int" order="BEFORE">
			select spring_board_seq.nextval from dual
		</selectKey>
		insert into spring_board(num,name,passwd,subject,content,wdate,readnum,filename,
		originFilename,filesize,refer,lev,sunbun)
		values(#{num},#{name},#{passwd},#{subject},#{content:VARCHAR},sysdate,#{readnum}
		,#{filename:VARCHAR},#{originFilename:VARCHAR},#{filesize:NUMERIC},${refer},#{lev},#{sunbun})
		<!-- 답변글쓰기 refer에는 부모 글번호를 넣는다 -->
</insert>
</mapper>