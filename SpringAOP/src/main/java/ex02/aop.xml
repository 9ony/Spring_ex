<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- aop,context 네임스페이스 추가 -->
	<!-- [1] Aspect : 공통관심사항(cross-cutting concern 빈 등록 -->
	<bean id="common" class="ex02.CommonAspect"/>
	<!-- [2] Target: 핵심관심사항(core concern) bean Add -->
	<bean id="boardSvc" class="ex02.boardServiceImpl"/>
	
	<!-- [3] PointCut 기술 -->
	<aop:config>
		<aop:aspect ref="common">
			<!-- 포인트컷 표현식:excution(수식어패턴? 리턴타입 패키지패턴?이름패턴(파라미터패턴) -->
			<aop:pointcut expression="execution(* ex02.boardServiceImpl.insertBoard(..))" id="point1"/>
			<!-- [1] aop:before => 메서드가 호출되기 전에 공통관심사항이 적용된다. -->
			<aop:before method="trace1" pointcut-ref="point1"/>
			<!-- [2] aop:after => 메서드가 호출된 후에 적용. 정상실행유무 상관없이 적용 -->
			<aop:after method="trace2" pointcut-ref="point1"/>
			<!-- [3] aop:after => 메서드가 호출된 후에 적용. 정상실행유무 상관없이 적용 -->
			<aop:after-throwing method="trace3" pointcut-ref="point1" throwing="e"/>
			<!-- [4] aop:after => 메서드가 호출된 후에 적용. 정상실행유무 상관없이 적용 -->
			<aop:after-returning method="trace4" pointcut-ref="point1" returning="result"/>
			<!-- [5] aop:around => 매서드 호출 이전,이후,예회 발생 모든시점에 적용가능 -->
			<aop:around method="trace5" pointcut-ref="point1"/>
		</aop:aspect>
	</aop:config>
	
</beans>
